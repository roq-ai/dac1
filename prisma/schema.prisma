generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description       String?             @db.VarChar(255)
  image             String?             @db.VarChar(255)
  name              String              @db.VarChar(255)
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  user_id           String              @db.Uuid
  tenant_id         String              @db.VarChar(255)
  user              user                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  greeting_template greeting_template[]
}

model greeting_history {
  id                   String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  greeting_template_id String            @db.Uuid
  user_id              String            @db.Uuid
  sent_at              DateTime          @default(now()) @db.Timestamp(6)
  created_at           DateTime          @default(now()) @db.Timestamp(6)
  updated_at           DateTime          @default(now()) @db.Timestamp(6)
  greeting_template    greeting_template @relation(fields: [greeting_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                 user              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model greeting_template {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title            String             @db.VarChar(255)
  content          String
  company_id       String             @db.Uuid
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  greeting_history greeting_history[]
  company          company            @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String             @unique @db.VarChar(255)
  firstName        String?            @db.VarChar(255)
  lastName         String?            @db.VarChar(255)
  roq_user_id      String             @db.VarChar(255)
  tenant_id        String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  company          company[]
  greeting_history greeting_history[]
}
